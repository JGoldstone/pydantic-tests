<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SPLITTER_PROPORTION" value="0.44444445" />
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="466e69f6-f83a-4047-a165-be14e5109776" name="Changes" comment="Incomplete push towards matching schema">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/python/camdkit/compatibility.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/python/camdkit/compatibility.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/python/test_compatibility.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/python/test_compatibility.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Jupyter Notebook" />
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;JGoldstone&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:JGoldstone/pydantic-tests.git&quot;,
    &quot;accountId&quot;: &quot;9ed8e7b0-c240-498c-aed3-59fc1c4e8791&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic/_internal/_known_annotated_metadata.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic/_internal/_schema_generation_shared.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic/json_schema.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic/main.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic/types.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/pydantic_core/core_schema.py" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/lib/python3.13/site-packages/traitlets/traitlets.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/src/main/python/camdkit/compatibility.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../../pyenv/pyenv/versions/3.13.0/lib/python3.13/typing.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../pyenv/pyenv/versions/3.13.0/lib/python3.13/unittest/case.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../pyenv/pyenv/versions/3.13.0/lib/python3.13/unittest/main.py" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2mvYUHKX0ORpn2XgnK79NTk0A1O" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Notification.DisplayName-DoNotAsk-CythonWarning": "Python debugger native extension available",
    "Notification.DoNotAsk-CythonWarning": "true",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_foo.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_non_blank_utf8_string.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_non_negative_float.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_non_negative_int.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_rational_ranges.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_strictly_positive_float.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_strictly_positive_int.executor": "Run",
    "Python tests.Python tests for test_base_types.FrameworkTestCases.test_strictly_positive_rational_ranges.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTestCases.test_physical_dimensions.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTestCases.test_sensel_dimensions.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTestCases.test_shutter_angle.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTestCases.test_static_camera.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTypesTestCases.test_physical_dimensions.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTypesTestCases.test_sensel_dimensions.executor": "Debug",
    "Python tests.Python tests for test_camera_types.CameraTypesTestCases.test_shutter_angle.executor": "Run",
    "Python tests.Python tests for test_camera_types.CameraTypesTestCases.test_static_camera_schema.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_active_sensor_physical_dimensions.executor": "Debug",
    "Python tests.Python tests for test_clip.ClipTestCases.test_basic.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_camera_static_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_duration.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_frame_rate_validation.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_global_regular_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_lens_regular_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_lens_static_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_old_style.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_sampleID_validation.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_sampleID_validation_old_style.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_sample_from_json.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_sample_id_to_json.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_schema_printing.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_statics.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_timing_regular_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_tracker_regular_parameters.executor": "Run",
    "Python tests.Python tests for test_clip.ClipTestCases.test_tracker_static_parameters.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_annotated_opt_same_as_pure_opt.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_converting_pydantic_optional_schema_to_classic_schema.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_detecting_array_schema_property.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_detecting_optional_anamorphic_squeeze.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_detecting_optional_schema_by_type.executor": "Debug",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_detecting_optional_schema_property_by_type.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_gen_schema.executor": "Run",
    "Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties.executor": "Debug",
    "Python tests.Python tests for test_framework.MyTestCase.test_non_blank_utf8_string.executor": "Run",
    "Python tests.Python tests for test_framework.MyTestCase.test_rational_ranges.executor": "Run",
    "Python tests.Python tests for test_framework.MyTestCase.test_strictly_positive_rational_ranges.executor": "Run",
    "Python tests.Python tests for test_lens_types.LensTypesTestCases.test_distortion.executor": "Run",
    "Python tests.Python tests for test_lens_types.LensTypesTestCases.test_static_clens_schema.executor": "Run",
    "Python tests.Python tests for test_lens_types.LensTypesTestCases.test_static_lens_schema.executor": "Debug",
    "Python tests.Python tests for test_model.ModelTest.test_active_sensor_physical_dimensions.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_active_sensor_resolution.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_documentation.executor": "Debug",
    "Python tests.Python tests for test_model.ModelTest.test_duration.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_duration_fraction.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_f_number.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_focus_position.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_frame_rate.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_lens_distortion_to_dict.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_lens_distortions.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_lens_distortions_from_dict.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_lens_encoders_limits.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_serialize.executor": "Debug",
    "Python tests.Python tests for test_model.ModelTest.test_synchronization_ptp.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_timecode_format.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_timecode_formats.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_timestamp_limits.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_timing_mode_enum.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_timing_sample_rate_model.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_transforms_from_dict2.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_transforms_model.executor": "Run",
    "Python tests.Python tests for test_model.ModelTest.test_transforms_to_dict.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_Standalone_sample_id_no_args.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_ctor.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_open_coded_sample_id.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_physical_dimensions.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_rotation_angle.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_blank_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_explicit_ctor.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_explicit_none_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_float_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_invalid_urn_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_no_args.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_numeric.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_to_json.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_valid_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_valid_urn_arg.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_sample_id_validation.executor": "Debug",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_shutter_angle.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_synchronization_offsets_validation.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_synchronization_source_validation.executor": "Run",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_to_json.executor": "Debug",
    "Python tests.Python tests for test_model_types.ModelTestCases.test_uuid_urn.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_non_negative_48bit_int.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_non_negative_8bit_int.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_non_negative_float.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_non_negative_int.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_normalized_float.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_rational.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_strictly_positive_float.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_strictly_positive_int.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_strictly_positive_rational.executor": "Run",
    "Python tests.Python tests for test_numeric_types.NumericsTestCases.test_unity_or_greater_float.executor": "Run",
    "Python tests.Python tests for test_schema_accuracy.SchemaAccuracyTestCases.test_camera_make_non_handling.executor": "Debug",
    "Python tests.Python tests for test_string_types.StringsTestCases.test_non_blank_utf8_string.executor": "Debug",
    "Python tests.Python tests for test_string_types.StringsTestCases.test_non_blank_utf8_string_schema_matches.executor": "Run",
    "Python tests.Python tests for test_string_types.StringsTestCases.test_uuid_urn.executor": "Run",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_schemas_match.executor": "Debug",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_synchronization.executor": "Run",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_synchronization_offsets_validation.executor": "Debug",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_synchronization_ptp.executor": "Debug",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_timecode.executor": "Debug",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_timecode_format.executor": "Debug",
    "Python tests.Python tests for test_timing_types.TimingTestCases.test_timestamp.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_firmware_version.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_make.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_model_name.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_notes.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_recording.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_serial_number.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_slate.executor": "Run",
    "Python tests.Python tests for test_tracker_types.TrackerTestCases.test_tracker_status.executor": "Run",
    "Python tests.Python tests for test_transform_types.TestTransformCases.test_transform.executor": "Debug",
    "Python tests.Python tests for test_transform_types.TestTransformCases.test_vector3.executor": "Run",
    "Python tests.Python tests for test_versioning_types.VersioningTypesTestCases.test_versioning_type.executor": "Run",
    "Python tests.Python tests in test_base_types.py.executor": "Run",
    "Python tests.Python tests in test_camera_types.py.executor": "Run",
    "Python tests.Python tests in test_clip.py.executor": "Run",
    "Python tests.Python tests in test_compatibility.py.executor": "Run",
    "Python tests.Python tests in test_framework.py.executor": "Run",
    "Python tests.Python tests in test_lens_types.py.executor": "Run",
    "Python tests.Python tests in test_model.py.executor": "Run",
    "Python tests.Python tests in test_model_types.py.executor": "Run",
    "Python tests.Python tests in test_numeric_types.py.executor": "Run",
    "Python tests.Python tests in test_schema_accuracy.py.executor": "Run",
    "Python tests.Python tests in test_string_types.py.executor": "Run",
    "Python tests.Python tests in test_timing_types.py.executor": "Debug",
    "Python tests.Python tests in test_tracker_types.py.executor": "Run",
    "Python tests.Python tests in test_transform_types.py.executor": "Run",
    "Python tests.Python tests in test_versioning_types.py.executor": "Run",
    "Python tests.Unittests for test_clip.ClipTestCases.test_lens_regular_parameters.executor": "Run",
    "Python tests.Unittests in python.executor": "Run",
    "Python.camera_types.executor": "Run",
    "Python.clip.executor": "Debug",
    "Python.compatibility.executor": "Run",
    "Python.main.executor": "Run",
    "Python.scratch.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/usr/local/repos/git/jgoldstone/pydantic-tests",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "aDefault",
    "settings.editor.selected.configurable": "preferences.keymap",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "Python"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/python/camdkit" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_compatibility.CompatibilityTestCases.test_annotated_opt_same_as_pure_opt" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_compatibility.CompatibilityTestCases.test_annotated_opt_same_as_pure_opt&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_compatibility.CompatibilityTestCases.test_gen_schema" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_compatibility.CompatibilityTestCases.test_gen_schema&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_lens_types.LensTypesTestCases.test_static_lens_schema" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_lens_types.LensTypesTestCases.test_static_lens_schema&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in test_compatibility.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/test/python/test_compatibility.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Unittests in python" type="tests" factoryName="Unittests" nameIsGenerated="true">
      <module name="pydantic tests" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$USER_HOME$/Library/Caches/pypoetry/virtualenvs/pydantic_tests-WbBgnGQD-py3.13/bin/python" />
      <option name="SDK_NAME" value="Poetry (pydantic-tests)" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_pattern" value="&quot;test_*.py&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/test/python&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.main" />
      <item itemvalue="Python tests.Unittests in python" />
      <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties" />
      <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_annotated_opt_same_as_pure_opt" />
      <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_gen_schema" />
      <item itemvalue="Python tests.Python tests in test_compatibility.py" />
      <item itemvalue="Python tests.Python tests for test_lens_types.LensTypesTestCases.test_static_lens_schema" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_wrapping_classic_camdkit_properties" />
        <item itemvalue="Python tests.Python tests for test_lens_types.LensTypesTestCases.test_static_lens_schema" />
        <item itemvalue="Python tests.Python tests in test_compatibility.py" />
        <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_annotated_opt_same_as_pure_opt" />
        <item itemvalue="Python tests.Python tests for test_compatibility.CompatibilityTestCases.test_gen_schema" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-PY-243.22562.220" />
        <option value="bundled-python-sdk-0fc6c617c4bd-9a18a617cbe4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.22562.220" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration>$USER_HOME$/.subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="466e69f6-f83a-4047-a165-be14e5109776" name="Changes" comment="" />
      <created>1727958530762</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727958530762</updated>
      <workItem from="1727958539347" duration="5122000" />
      <workItem from="1727975840815" duration="12000" />
      <workItem from="1727975953189" duration="11432000" />
      <workItem from="1728139889575" duration="21284000" />
      <workItem from="1728766574525" duration="2795000" />
      <workItem from="1728834686704" duration="2647000" />
      <workItem from="1728839043680" duration="398000" />
      <workItem from="1728840937153" duration="24233000" />
      <workItem from="1729092631954" duration="460000" />
      <workItem from="1729609805714" duration="190000" />
      <workItem from="1730133127975" duration="250000" />
      <workItem from="1731704909713" duration="380000" />
      <workItem from="1731705678213" duration="1963000" />
      <workItem from="1732055445104" duration="185000" />
      <workItem from="1732919525370" duration="1329000" />
      <workItem from="1733010179570" duration="1538000" />
      <workItem from="1733259270686" duration="185065000" />
      <workItem from="1734018398844" duration="5656000" />
      <workItem from="1734029473500" duration="51831000" />
      <workItem from="1734133161202" duration="93607000" />
      <workItem from="1734368060036" duration="266885000" />
      <workItem from="1735181862176" duration="62049000" />
      <workItem from="1735338854146" duration="7894000" />
    </task>
    <task id="LOCAL-00051" summary="Move GlobalPosition from clip.py to tracker_types.py">
      <option name="closed" value="true" />
      <created>1734392457338</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1734392457338</updated>
    </task>
    <task id="LOCAL-00052" summary="Move GlobalPosition from clip.py to tracker_types.py">
      <option name="closed" value="true" />
      <created>1734392485500</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1734392485500</updated>
    </task>
    <task id="LOCAL-00053" summary="Add NormalizedFloat type and tests for it">
      <option name="closed" value="true" />
      <created>1734452321273</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1734452321273</updated>
    </task>
    <task id="LOCAL-00054" summary="Remove comments or compact JSON schema text">
      <option name="closed" value="true" />
      <created>1734452480241</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1734452480241</updated>
    </task>
    <task id="LOCAL-00055" summary="Some experiments with aliasing for JSON">
      <option name="closed" value="true" />
      <created>1734452844477</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1734452844477</updated>
    </task>
    <task id="LOCAL-00056" summary="Workspace changes supporting recent changes">
      <option name="closed" value="true" />
      <created>1734452870520</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1734452870520</updated>
    </task>
    <task id="LOCAL-00057" summary="Copy over test_model.py from classic implementation">
      <option name="closed" value="true" />
      <created>1734456946045</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1734456946045</updated>
    </task>
    <task id="LOCAL-00058" summary="Be more forgiving when assigning ints or Fractions to attributes defined as StrictlyPositiveInt (assuming int or fraction fits within representable range).">
      <option name="closed" value="true" />
      <created>1734460814066</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1734460814066</updated>
    </task>
    <task id="LOCAL-00059" summary="Add OPENTRACKIO_PROTOCOL_VERSION">
      <option name="closed" value="true" />
      <created>1734460851291</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1734460851291</updated>
    </task>
    <task id="LOCAL-00060" summary="Allow users of classic API to import from framework.py and model.py">
      <option name="closed" value="true" />
      <created>1734460885251</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1734460885251</updated>
    </task>
    <task id="LOCAL-00061" summary="Adjust classic test_model.py to distinguish between physical dimensions and sensel/pixel resolution">
      <option name="closed" value="true" />
      <created>1734461040181</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1734461040181</updated>
    </task>
    <task id="LOCAL-00062" summary="Check the result of assigning to a clip's duration against a StrictlyPositiveRational rather than just a Fraction">
      <option name="closed" value="true" />
      <created>1734461110426</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1734461110426</updated>
    </task>
    <task id="LOCAL-00063" summary="Comment out tests in test_f_number() and test_t_number() that were looking (I think) to raise if a list were passed instead of a tuple">
      <option name="closed" value="true" />
      <created>1734461188201</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1734461188201</updated>
    </task>
    <task id="LOCAL-00064" summary="Add lens_distortion_is_projection to static lens metadata">
      <option name="closed" value="true" />
      <created>1734480326771</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1734480326771</updated>
    </task>
    <task id="LOCAL-00065" summary="Don't try and convert None to a rational in field validation used by a couple of rational attributes">
      <option name="closed" value="true" />
      <created>1734480392307</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1734480392307</updated>
    </task>
    <task id="LOCAL-00066" summary="Make the expected schema more visually compact.">
      <option name="closed" value="true" />
      <created>1734480417653</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1734480417653</updated>
    </task>
    <task id="LOCAL-00067" summary="Convert an integer supplied as a frame rate into a rational">
      <option name="closed" value="true" />
      <created>1734481576554</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1734481576554</updated>
    </task>
    <task id="LOCAL-00068" summary="More work towards passing classic model_test.py without breaking Pydantic-tests unit tests">
      <option name="closed" value="true" />
      <created>1734539608977</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1734539608977</updated>
    </task>
    <task id="LOCAL-00069" summary="Raise ValueError if all of F, I and Z are None for FizEncoder or RawFizEncoder">
      <option name="closed" value="true" />
      <created>1734540849319</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1734540849319</updated>
    </task>
    <task id="LOCAL-00070" summary="Change test_model.py expectation: no longer assume list or Fraction assigned to a value will read back as list or Fraction; now expect how the field was defined (tuple or StrictlyPositiveRational).">
      <option name="closed" value="true" />
      <created>1734554398785</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1734554398785</updated>
    </task>
    <task id="LOCAL-00071" summary="Change expectation on reading timecode format sub-frame indicator: since it's defined as an int, read it back as an int even if what was assigned to it was a True value.">
      <option name="closed" value="true" />
      <created>1734554474553</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1734554474553</updated>
    </task>
    <task id="LOCAL-00072" summary="Use a complex rather than a Fraction to test setting the focus distance with an invalid value will raise.">
      <option name="closed" value="true" />
      <created>1734554531310</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1734554531310</updated>
    </task>
    <task id="LOCAL-00073" summary="Initial README.md">
      <option name="closed" value="true" />
      <created>1734614147509</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1734614147509</updated>
    </task>
    <task id="LOCAL-00074" summary="Add discussion of JSON schema to README.md">
      <option name="closed" value="true" />
      <created>1734616968814</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1734616968814</updated>
    </task>
    <task id="LOCAL-00075" summary="Restrict components of version number to single digits">
      <option name="closed" value="true" />
      <created>1734618189861</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1734618189861</updated>
    </task>
    <task id="LOCAL-00076" summary="Add introduction to Pydantic">
      <option name="closed" value="true" />
      <created>1734619374483</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1734619374483</updated>
    </task>
    <task id="LOCAL-00077" summary="Add section on the overall goal; add content explaining where it cannot be reached.">
      <option name="closed" value="true" />
      <created>1734622250676</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1734622250676</updated>
    </task>
    <task id="LOCAL-00078" summary="Add missing Pydantic website URL">
      <option name="closed" value="true" />
      <created>1734622532990</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1734622532990</updated>
    </task>
    <task id="LOCAL-00079" summary="Push final changes before lunch and meeting.">
      <option name="closed" value="true" />
      <created>1734623734770</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1734623734770</updated>
    </task>
    <task id="LOCAL-00080" summary="Fix references in code Markdown; were angular2html, now are python">
      <option name="closed" value="true" />
      <created>1734627334672</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1734627334672</updated>
    </task>
    <task id="LOCAL-00081" summary="Remove some obsolete comments from pre-implementation days">
      <option name="closed" value="true" />
      <created>1734627467197</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1734627467197</updated>
    </task>
    <task id="LOCAL-00082" summary="Update notes on the implementation.">
      <option name="closed" value="true" />
      <created>1734835895116</created>
      <option name="number" value="00082" />
      <option name="presentableId" value="LOCAL-00082" />
      <option name="project" value="LOCAL" />
      <updated>1734835895116</updated>
    </task>
    <task id="LOCAL-00083" summary="More notes and analyses.">
      <option name="closed" value="true" />
      <created>1734873668964</created>
      <option name="number" value="00083" />
      <option name="presentableId" value="LOCAL-00083" />
      <option name="project" value="LOCAL" />
      <updated>1734873668964</updated>
    </task>
    <task id="LOCAL-00084" summary="Use classic regex for PTP master, modified b/c Pydantic doesn't handle regex backreferences">
      <option name="closed" value="true" />
      <created>1734873920017</created>
      <option name="number" value="00084" />
      <option name="presentableId" value="LOCAL-00084" />
      <option name="project" value="LOCAL" />
      <updated>1734873920017</updated>
    </task>
    <task id="LOCAL-00085" summary="Add protocol version to __all__.">
      <option name="closed" value="true" />
      <created>1734873985191</created>
      <option name="number" value="00085" />
      <option name="presentableId" value="LOCAL-00085" />
      <option name="project" value="LOCAL" />
      <updated>1734873985191</updated>
    </task>
    <task id="LOCAL-00086" summary="Fix regex in timing test cases too.">
      <option name="closed" value="true" />
      <created>1734874285295</created>
      <option name="number" value="00086" />
      <option name="presentableId" value="LOCAL-00086" />
      <option name="project" value="LOCAL" />
      <updated>1734874285295</updated>
    </task>
    <task id="LOCAL-00087" summary="Change test_model.py's test_timecode_format() to use to_int() on instances, not as if it were a static method.">
      <option name="closed" value="true" />
      <created>1734875734479</created>
      <option name="number" value="00087" />
      <option name="presentableId" value="LOCAL-00087" />
      <option name="project" value="LOCAL" />
      <updated>1734875734479</updated>
    </task>
    <task id="LOCAL-00088" summary="Add model validator to ensure timecode's frame number is less than the timecode format's rate">
      <option name="closed" value="true" />
      <created>1734877249386</created>
      <option name="number" value="00088" />
      <option name="presentableId" value="LOCAL-00088" />
      <option name="project" value="LOCAL" />
      <updated>1734877249386</updated>
    </task>
    <task id="LOCAL-00089" summary="Just a general catch-up in hopes of getting Nick Shaw to look at it">
      <option name="closed" value="true" />
      <created>1734895019351</created>
      <option name="number" value="00089" />
      <option name="presentableId" value="LOCAL-00089" />
      <option name="project" value="LOCAL" />
      <updated>1734895019351</updated>
    </task>
    <task id="LOCAL-00090" summary="recursive to_json() for CompatibleBaseModel, and adjustments for type correctness (tuple instead of list) in test_model.py">
      <option name="closed" value="true" />
      <created>1734904351929</created>
      <option name="number" value="00090" />
      <option name="presentableId" value="LOCAL-00090" />
      <option name="project" value="LOCAL" />
      <updated>1734904351929</updated>
    </task>
    <task id="LOCAL-00091" summary="FInish adding clip_property and constraints to all parameters.">
      <option name="closed" value="true" />
      <created>1735136352468</created>
      <option name="number" value="00091" />
      <option name="presentableId" value="LOCAL-00091" />
      <option name="project" value="LOCAL" />
      <updated>1735136352468</updated>
    </task>
    <task id="LOCAL-00092" summary="Move description properties from parameters down to the other properties, when optional or array JSON structure is interposed. Add units to match classic camdkit.">
      <option name="closed" value="true" />
      <created>1735181131569</created>
      <option name="number" value="00092" />
      <option name="presentableId" value="LOCAL-00092" />
      <option name="project" value="LOCAL" />
      <updated>1735181131569</updated>
    </task>
    <task id="LOCAL-00093" summary="Remove remnants of failed PARAMETER_CONSTRAINTS dict">
      <option name="closed" value="true" />
      <created>1735215119451</created>
      <option name="number" value="00093" />
      <option name="presentableId" value="LOCAL-00093" />
      <option name="project" value="LOCAL" />
      <updated>1735215119451</updated>
    </task>
    <task id="LOCAL-00094" summary="Clearer names for functions to detect optional and array property schema">
      <option name="closed" value="true" />
      <created>1735247968768</created>
      <option name="number" value="00094" />
      <option name="presentableId" value="LOCAL-00094" />
      <option name="project" value="LOCAL" />
      <updated>1735247968768</updated>
    </task>
    <task id="LOCAL-00095" summary="Add saved JSON points of comparison from classic implementation in a test resource directory.">
      <option name="closed" value="true" />
      <created>1735304497503</created>
      <option name="number" value="00095" />
      <option name="presentableId" value="LOCAL-00095" />
      <option name="project" value="LOCAL" />
      <updated>1735304497503</updated>
    </task>
    <task id="LOCAL-00096" summary="Add missing fdlLink alias for fdl_link parameter">
      <option name="closed" value="true" />
      <created>1735306137093</created>
      <option name="number" value="00096" />
      <option name="presentableId" value="LOCAL-00096" />
      <option name="project" value="LOCAL" />
      <updated>1735306137093</updated>
    </task>
    <task id="LOCAL-00097" summary="Supply no-arg constructor values for Clip's tracker, timing, lens, and static (and all static's component) parameters">
      <option name="closed" value="true" />
      <created>1735306337767</created>
      <option name="number" value="00097" />
      <option name="presentableId" value="LOCAL-00097" />
      <option name="project" value="LOCAL" />
      <updated>1735306337767</updated>
    </task>
    <task id="LOCAL-00098" summary="Remove class docstring for StaticCamera; clear out unused import and a dead TODO">
      <option name="closed" value="true" />
      <created>1735332630963</created>
      <option name="number" value="00098" />
      <option name="presentableId" value="LOCAL-00098" />
      <option name="project" value="LOCAL" />
      <updated>1735332630963</updated>
    </task>
    <task id="LOCAL-00099" summary="Incomplete push towards matching schema">
      <option name="closed" value="true" />
      <created>1735332675324</created>
      <option name="number" value="00099" />
      <option name="presentableId" value="LOCAL-00099" />
      <option name="project" value="LOCAL" />
      <updated>1735332675324</updated>
    </task>
    <option name="localTasksCounter" value="100" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Restrict components of version number to single digits" />
    <MESSAGE value="Add introduction to Pydantic" />
    <MESSAGE value="Add section on the overall goal; add content explaining where it cannot be reached." />
    <MESSAGE value="Add missing Pydantic website URL" />
    <MESSAGE value="Push final changes before lunch and meeting." />
    <MESSAGE value="Fix references in code Markdown; were angular2html, now are python" />
    <MESSAGE value="Remove some obsolete comments from pre-implementation days" />
    <MESSAGE value="Update notes on the implementation." />
    <MESSAGE value="More notes and analyses." />
    <MESSAGE value="Use classic regex for PTP master, modified b/c Pydantic doesn't handle regex backreferences" />
    <MESSAGE value="Add protocol version to __all__." />
    <MESSAGE value="Fix regex in timing test cases too." />
    <MESSAGE value="Change test_model.py's test_timecode_format() to use to_int() on instances, not as if it were a static method." />
    <MESSAGE value="Add model validator to ensure timecode's frame number is less than the timecode format's rate" />
    <MESSAGE value="Just a general catch-up in hopes of getting Nick Shaw to look at it" />
    <MESSAGE value="recursive to_json() for CompatibleBaseModel, and adjustments for type correctness (tuple instead of list) in test_model.py" />
    <MESSAGE value="FInish adding clip_property and constraints to all parameters." />
    <MESSAGE value="Move description properties from parameters down to the other properties, when optional or array JSON structure is interposed. Add units to match classic camdkit." />
    <MESSAGE value="Remove remnants of failed PARAMETER_CONSTRAINTS dict" />
    <MESSAGE value="Clearer names for functions to detect optional and array property schema" />
    <MESSAGE value="Add saved JSON points of comparison from classic implementation in a test resource directory." />
    <MESSAGE value="Add missing fdlLink alias for fdl_link parameter" />
    <MESSAGE value="Supply no-arg constructor values for Clip's tracker, timing, lens, and static (and all static's component) parameters" />
    <MESSAGE value="Remove class docstring for StaticCamera; clear out unused import and a dead TODO" />
    <MESSAGE value="Incomplete push towards matching schema" />
    <option name="LAST_COMMIT_MESSAGE" value="Incomplete push towards matching schema" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="jupyter-line">
          <url>file://$PROJECT_DIR$/experiments/learnings.ipynb</url>
          <line>69</line>
          <option name="timeStamp" value="69" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="jupyter-line">
          <url>file://$PROJECT_DIR$/experiments/learnings.ipynb</url>
          <line>95</line>
          <option name="timeStamp" value="95" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/python/test_lens_types.py</url>
          <line>78</line>
          <option name="timeStamp" value="178" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/test/python/test_compatibility.py</url>
          <line>249</line>
          <option name="timeStamp" value="189" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/pydantic_tests$camera_types.coverage" NAME="camera_types Coverage Results" MODIFIED="1734106899074" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/main/python/camdkit" />
    <SUITE FILE_PATH="coverage/pydantic_tests$Unittests_in_python.coverage" NAME="Unittests in python Coverage Results" MODIFIED="1735329190688" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
    <SUITE FILE_PATH="coverage/pydantic_tests$scratch.coverage" NAME="scratch Coverage Results" MODIFIED="1728857315751" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$APPLICATION_CONFIG_DIR$/scratches" />
    <SUITE FILE_PATH="coverage/pydantic_tests$main.coverage" NAME="main Coverage Results" MODIFIED="1727995107162" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/pydantic_tests$compatibility.coverage" NAME="compatibility Coverage Results" MODIFIED="1734891268851" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/main/python/camdkit" />
    <SUITE FILE_PATH="coverage/pydantic_tests$.coverage" NAME=" Coverage Results" MODIFIED="1735352379148" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test/python" />
    <SUITE FILE_PATH="coverage/pydantic_tests$clip.coverage" NAME="clip Coverage Results" MODIFIED="1735174811083" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/main/python/camdkit" />
    <SUITE FILE_PATH="coverage/pydantic_tests$Unittests_for_test_clip_ClipTestCases_test_lens_regular_parameters.coverage" NAME="Unittests for test_clip.ClipTestCases.test_lens_regular_parameters Coverage Results" MODIFIED="1734539427401" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>